% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/exportUserRoles.R
\name{exportUserRoles}
\alias{exportUserRoles}
\title{Export User Roles for a Project}
\usage{
exportUserRoles(
  rcon,
  labels = TRUE,
  form_rights = TRUE,
  ...,
  error_handling = getOption("redcap_error_handling"),
  config = list(),
  api_param = list()
)

exportUserRoles(
  rcon,
  labels = TRUE,
  form_rights = TRUE,
  ...,
  error_handling = getOption("redcap_error_handling"),
  config = list(),
  api_param = list()
)
}
\arguments{
\item{rcon}{A \code{redcapConnection} object.}

\item{labels}{\code{logical(1)} Indicates if the data export and form access rights are
converted to factor objects.}

\item{form_rights}{\code{logical(1)} Indicates if the form rights should be
transformed to one column per form. The API-provided character string
is always returned with the format \link{form_name}:\link{access_code} and a comma separating
each form.}

\item{...}{Arguments to be passed to other methods.}

\item{error_handling}{An option for how to handle errors returned by the API.
see \code{\link{redcapError}}}

\item{config}{\code{list} Additional configuration parameters to pass to
\code{\link[httr]{POST}}. These are appended to any parameters in
\code{rcon$config}.}

\item{api_param}{\code{list} Additional API parameters to pass into the
body of the API call. This provides users to execute calls with options
that may not otherwise be supported by \code{redcapAPI}.}
}
\description{
This method allows you to export the list of user roles for a
project, including their user privileges.
}
