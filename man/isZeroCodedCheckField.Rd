% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/isZeroCodedCheckField.R
\name{isZeroCodedCheckField}
\alias{isZeroCodedCheckField}
\alias{warnOfZeroCodedCheckCasting}
\alias{warnZeroCodedFieldPresent}
\title{Identify Check Fields with a Zero Coded Option}
\usage{
isZeroCodedCheckField(field_name)

warnOfZeroCodedCheckCasting(field_name, x)

warnZeroCodedFieldPresent(field_names)
}
\arguments{
\item{field_name}{\code{character(1)} The name of a field to be tested.}

\item{x}{\code{atomic} object.}

\item{field_names}{\code{character} vector of field names.}
}
<<<<<<< HEAD
\description{
Check fields that have 0 as a coding option can confuse
certain data processing steps because it can be difficult to
differentiate if a "0" value represents an unchecked or checked
option. Identifying these fields is important to handling them
correctly.
=======
\value{
\code{isZeroCodedCheckField} returns a \code{logical(1)}

\code{warnOfZeroCodedCheckCasting} has no return and issues a warning if the
field name appears to be zero-coded.

\code{warnZeroCodedFieldPresent} has no return and issues a warning if any
of the fields passed appear to be zero-coded.
}
\description{
Check fields that have \code{0} as a coding option can confuse
certain data processing steps because it can be difficult to
differentiate if a \code{0} value represents an unchecked or checked
option. Identifying these fields is important to handling them
correctly.
}
\examples{
\dontrun{
isZeroCodedCheckField("check_field___x")

isZeroCodedCheckField("check_field___0")


x <- factor(c(1, 0, 1, 0, 0), 
            levels = 0:1)
warnOfZeroCodedCheckCasting(field_name = "check_field___0", 
                            x = x)
                       
 
warnZeroCodedFieldPresent(c("check_field___x", "check_field___0"))
}
>>>>>>> Issue-216-consolidateDocumentation
}
